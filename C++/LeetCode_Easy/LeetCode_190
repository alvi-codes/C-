// class Solution {
// public:
//     uint32_t reverseBits(uint32_t n) {
//         std::string bin = "";
//         for(int i = 0; i < 32; i++){
//             if((n & 1) == 1){
//                 bin+= "1";
//             }
//             else{
//                 bin+= "0";
//             }
//             n = n >> 1;
//         }
//         uint32_t result = static_cast<uint32_t>(std::stoul(bin, nullptr, 2));
//         return result;
//     }
// };



class Solution {
public:
    uint32_t k = 0;
    int l = 31;
    uint32_t reverseBits(uint32_t n) {
        if(n == 0){
            return 0;
        }

        if(n & 1){
            k += 1 << l;
        }

        l--;
        reverseBits(n >> 1);

        return k;
    }
};
