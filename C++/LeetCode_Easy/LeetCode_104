/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int find_depth(TreeNode* root, int depth) {
        if (root == NULL) {
            return depth;
        }
        int depth_l = find_depth(root->left, depth + 1);
        int depth_r = find_depth(root->right, depth + 1);
        return max(depth_l, depth_r);
    }

    int maxDepth(TreeNode* root) {
        return find_depth(root, 0);        
    }
};

//Alternative way:
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(root==NULL) {
            return 0;
        }
        return max(maxDepth(root->left), maxDepth(root->right)) + 1;
    }
};
