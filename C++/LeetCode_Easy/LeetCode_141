/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

// //Using Set
// class Solution {
// public:
//     bool hasCycle(ListNode *head) {
//         set<ListNode*> collection;
//         while(head != NULL){
//             if(collection.find(head) != collection.end()){
//                 return true;
//             }    
//             collection.insert(head);
//             head = head->next;
//         }
//         return false;    
//     }
// };

// Rabbit and Tortoise Algorithm
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(head == NULL)
            return false;
        ListNode *fast = head;
        ListNode *slow = head;
        while(fast != NULL && fast ->next != NULL)
        {
            fast = fast->next->next;
            slow = slow->next;
            if(fast == slow)
                return true;
        }
        return false;
    }
};
