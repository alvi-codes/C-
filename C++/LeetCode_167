// class Solution {
// public:
//     vector<int> twoSum(vector<int>& numbers, int target) {
//         int start = 0 ; 
//         int end = numbers.size() - 1 ; 
//         while ((start <= end) && (numbers[start] + numbers[end] != target))
//         {
//             if (numbers[start] + numbers[end] < target)
//             {
//                 start ++ ;  
//             }
//             else 
//             {
//                 end -- ; 
//             }
//         }
//         return {start + 1 ,end + 1} ; 
//     }
// };



class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {

        int size = numbers.size();

        int i = 0;
        int j = size - 1;

        while ( numbers[i] + numbers[j] != target){

            if ( numbers[i] + numbers[j] > target){
                j--;
            }
            else if ( numbers[i] + numbers[j] < target){
                i++;
            }
        }
        
        std::vector<int> result;
        result.push_back(i+1);
        result.push_back(j+1);
        return result;
    }
};
