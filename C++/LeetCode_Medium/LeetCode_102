// BFS Algorithm

class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {

        vector<vector<int>> output;

        if (root == NULL) return output;

        queue<TreeNode*> q;

        q.push(root);

        while(q.size() != 0){
            vector<int> curr_level;

            int q_size = q.size();

            for(int i = 0; i < q_size; i++){
                TreeNode* curr_node = q.front();
                q.pop();

                curr_level.push_back(curr_node->val);

                if(curr_node->left) q.push(curr_node->left);
                if(curr_node->right) q.push(curr_node->right);
            }

            output.push_back(curr_level);
        }

        return output;
    }
};
