class Solution {
public:

    void in_order_traversal(vector<int>& so_far, TreeNode* root, int k) {
        if (root == nullptr || so_far.size() >= k) return;
        
        in_order_traversal(so_far, root->left, k);
        
        if (so_far.size() >= k) return;
        so_far.push_back(root->val);
        
        in_order_traversal(so_far, root->right, k);
    }



    int kthSmallest(TreeNode* root, int k) {
        vector<int> so_far;
        in_order_traversal(so_far, root, k);
        return so_far[k-1];
    }
};
