class Solution {
public:

    void recurse(int index, string s, vector<string>& temp, vector<vector<string>>& result){
        if(index == s.size()){
            result.push_back(temp);
            return;
        }

        for (int i = index; i < s.size(); i++){
            if(isPalindrome(s, index, i) == true){
                temp.push_back(s.substr(index, i - index + 1));
                recurse(i + 1, s, temp, result);
                temp.pop_back();
            }
        }
    }

    bool isPalindrome(string s, int start, int end){
        while(start <= end){
            if(s[start] == s[end]){
                start++;
                end--;
            }
            else{
                return false;
            }
        }
        return true;
    }

    

    vector<vector<string>> partition(string s) {
        vector<vector<string>> result;
        vector<string> temp;

        recurse(0, s, temp, result);

        return result;
    }
};
